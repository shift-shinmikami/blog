{"version":3,"sources":["webpack:///./src/components/polygon/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/blog/index.js"],"names":["props","Style","styled","div","background","width","height","keyframes","Polygon","data","className","id","fluid","backgroundImage","childImageSharp","style","objectFit","Wrapper","pageQuery","BlogIndex","location","siteTitle","site","siteMetadata","title","siteDescription","description","posts","allMarkdownRemark","edges","fixed","avatar","alt","itemScope","itemType","map","node","frontmatter","fields","slug","key","date","excerpt","tags","BlogWrapper","article","rgba","colors","gray","Blog","content","length","substr","itemProp","to","dangerouslySetInnerHTML","__html"],"mappings":"4GAKcA,E,6EAWRC,EAAQC,IAAOC,IAAV,qEAAGD,CAAH,gvBACK,SAAAF,GAAK,OAAIA,EAAMI,YAAc,UAElC,SAAAJ,GAAK,OAAIA,EAAMK,OAAS,UACvB,SAAAL,GAAK,OAAIA,EAAMM,QAAU,WAKxB,SAAAN,GAAK,OAAIA,EAAMK,OAAS,UACvB,SAAAL,GAAK,OAAIA,EAAMM,QAAU,WArBzBN,EAwBc,EAvBnBO,YAAP,qCAKeP,KA8FFQ,EArCC,SAAAR,GACd,IAAMS,EAAI,OAkBV,OACE,kBAACR,EAAD,CACES,UAAU,UACVL,MAAOL,EAAMK,MACbC,OAAQN,EAAMM,OACdF,WAAYJ,EAAMI,YAElB,yBAAKO,GAAG,MACN,kBAAC,IAAD,CACEC,MAAOH,EAAKI,gBAAgBC,gBAAgBF,MAC5CG,MAAO,CAAEV,MAAO,OAAQC,OAAQ,SAChCU,UAAU,a,0CCtFpB,IAAMC,EAAUf,IAAOC,IAAV,oEAAGD,CAAH,mmBAmFAgB,GAFEC,UAtCG,SAAC,GAAwB,IAAtBV,EAAqB,EAArBA,KAAMW,EAAe,EAAfA,SACnBC,EAAYZ,EAAKa,KAAKC,aAAaC,MACnCC,EAAkBhB,EAAKa,KAAKC,aAAaG,YACzCC,EAAQlB,EAAKmB,kBAAkBC,MACrC,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUI,MAAOH,EAAWK,YAAaD,GACzD,kBAAC,IAAD,CAAKD,MAAM,uBACX,kBAAC,EAAD,CACElB,OAAO,QACPF,WAAW,kEAEb,kBAACa,EAAD,KACE,yBAAKP,UAAU,WACb,kBAAC,IAAD,CAAOoB,MAAOrB,EAAKsB,OAAOjB,gBAAgBgB,MAAOE,IAAI,WACrD,4BAAKvB,EAAKa,KAAKC,aAAaC,OAC5B,2BAAIf,EAAKa,KAAKC,aAAaG,cAE7B,yBAAKhB,UAAU,QAAQuB,WAAS,EAACC,SAAS,0BACvCP,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,kBAAC,IAAD,CACEf,MAAOA,EACPgB,IAAKJ,EAAKE,OAAOC,KACjBA,KAAI,IAAMH,EAAKC,YAAYE,KAAvB,IACJE,KAAML,EAAKC,YAAYI,KACvBf,YAAaU,EAAKC,YAAYX,YAC9BgB,QAASN,EAAKM,QACdC,KAAMP,EAAKC,YAAYM,cAYjB,e,iCC/FtB,4DAUMC,EAAc1C,IAAO2C,QAAV,uEAAG3C,CAAH,8dAGY4C,YAAKC,IAAOC,KAAM,KA4EhCC,IAnCF,SAAAjD,GACX,IAAIkD,EAAUlD,EAAM0B,aAAe1B,EAAM0C,QAIzC,OAHIQ,EAAQC,QAAU,MACpBD,EAAaA,EAAQE,OAAO,EAAG,KAAxB,OAGP,kBAACR,EAAD,CACEJ,IAAKxC,EAAMuC,KACXc,SAAS,WACTpB,WAAS,EACTC,SAAS,iCAET,6BACE,wBAAImB,SAAS,QACX,kBAAC,IAAD,CAAMC,GAAItD,EAAMuC,KAAMc,SAAS,OAC5BrD,EAAMwB,SAIb,iCACE,uBACE6B,SAAS,WACTE,wBAAyB,CACvBC,OAAQN,MAId,yBAAKxC,UAAU,QACb,kBAAC,IAAD,CAAa+B,KAAMzC,EAAMyC,OACzB,kBAAC,IAAD,CAAME,KAAM3C,EAAM2C,W","file":"component---src-pages-index-js-5fe4e3ae17529a4ff5d6.js","sourcesContent":["import React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\nimport { useStaticQuery } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst delay = props => {\n  return keyframes`\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: ${props};\n    }\n  `\n}\n\nconst Style = styled.div`\n  background: ${props => props.background || \"#999\"};\n  background: linear-gradient(45deg, #7bc6e2 0%, #fdb6c6 50%, #ffbe74 100%);\n  width: ${props => props.width || \"100%\"};\n  height: ${props => props.height || \"400px\"};\n  position: fixed;\n  top: 0;\n  left: 0;\n  #bg {\n    width: ${props => props.width || \"100%\"};\n    height: ${props => props.height || \"400px\"};\n    overflow: hidden;\n    opacity: 0;\n    animation: 0.4s ${delay(1)} linear 0s forwards;\n    position: relative;\n    z-index: 1;\n    .gatsby-image-wrapper {\n      width: 100vw;\n      height: 100%;\n      img {\n        width: 100vw;\n        height: 100%;\n        object-fit: cover;\n        position: relative;\n      }\n    }\n    &:after {\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      content: \"\";\n      left: 0;\n      top: 0;\n      background: linear-gradient(45deg, #7bc6e2 0%, #fdb6c6 50%, #ffbe74 100%);\n      opacity: 1;\n      z-index: 999;\n      mix-blend-mode: overlay;\n    }\n    &:before {\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      content: \"\";\n      left: 0;\n      top: 0;\n      background: linear-gradient(45deg, #7bc6e2 0%, #fdb6c6 50%, #ffbe74 100%);\n      opacity: 0.6;\n      z-index: 9999;\n      mix-blend-mode: multiply;\n    }\n  }\n`\nconst Polygon = props => {\n  const data = useStaticQuery(graphql`\n    query AuthQuery {\n      avatar: file(absolutePath: { regex: \"/tony.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 80, height: 80) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      backgroundImage: file(absolutePath: { regex: \"/poly-black.png/\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Style\n      className=\"polygon\"\n      width={props.width}\n      height={props.height}\n      background={props.background}\n    >\n      <div id=\"bg\">\n        <Image\n          fluid={data.backgroundImage.childImageSharp.fluid}\n          style={{ width: \"100%\", height: \"400px\" }}\n          objectFit=\"cover\"\n        />\n      </div>\n    </Style>\n  )\n}\n\nexport default Polygon\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Blog from \"../components/blog\"\nimport Polygon from \"../components/polygon\"\nimport Image from \"gatsby-image\"\n\n/* ===============================================\n#  page component\n=============================================== */\nconst Wrapper = styled.div`\n  background: var(--background);\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  margin-top: 370px;\n  padding-top: 50px;\n  padding-bottom: 50px;\n  z-index: 999;\n  .message {\n    position: absolute;\n    width: 100%;\n    padding: 0 10px;\n    max-width: var(--width);\n    top: 0;\n    right: 0;\n    left: 0;\n    margin: auto;\n    text-align: center;\n    height: var(--topHeight);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: #ffffff;\n    z-index: 9999;\n    h1 {\n      font-size: 1.8rem;\n      text-transform: uppercase;\n      font-weight: 600;\n    }\n    .gatsby-image-wrapper {\n      border-radius: 50%;\n      opacity: 0.8;\n      margin-top: 15px;\n      margin-bottom: 15px;\n    }\n  }\n  @media screen and (max-width: 780px) {\n    margin-bottom: 40px;\n  }\n`\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const siteDescription = data.site.siteMetadata.description\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <Layout location={location} title={siteTitle} description={siteDescription}>\n      <SEO title=\"Shin-tech25's blog\" />\n      <Polygon\n        height=\"400px\"\n        background=\"linear-gradient(45deg, #7bc6e2 0%, #fdb6c6 50%, #ffbe74 100%)\"\n      />\n      <Wrapper>\n        <div className=\"message\">\n          <Image fixed={data.avatar.childImageSharp.fixed} alt=\"author\" />\n          <h1>{data.site.siteMetadata.title}</h1>\n          <p>{data.site.siteMetadata.description}</p>\n        </div>\n        <div className=\"inner\" itemScope itemType=\"http://schema.org/Blog\">\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <Blog\n                title={title}\n                key={node.fields.slug}\n                slug={`/${node.frontmatter.slug}/`}\n                date={node.frontmatter.date}\n                description={node.frontmatter.description}\n                excerpt={node.excerpt}\n                tags={node.frontmatter.tags}\n              />\n            )\n          })}\n        </div>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    avatar: file(absolutePath: { regex: \"/tony.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 80, height: 80) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            tags\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport { rgba } from \"polished\"\nimport { Tags, PublishDate } from \"../../components/modules\"\nimport { colors } from \"../../style/GlobalStyle\"\n\n/* ===============================================\n#  style\n=============================================== */\nconst BlogWrapper = styled.article`\n  margin-bottom: 35px;\n  padding-bottom: 35px;\n  border-bottom: 1px solid ${rgba(colors.gray, 0.3)};\n  &:last-child {\n    border-bottom: none;\n  }\n  a {\n    text-decoration: none;\n  }\n  h2 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    padding-bottom: 5px;\n    a {\n      transition: 0.3s ease;\n      &:hover {\n        color: var(--primary);\n      }\n    }\n  }\n  .info {\n    display: flex;\n    justify-content: space-between;\n  }\n  p {\n    line-height: 1.8;\n    padding: 15px 0 25px 0;\n    font-size: 0.95rem;\n  }\n  @media screen and (max-width: 780px) {\n    margin-bottom: 25px;\n    padding-bottom: 25px;\n    .info {\n      flex-direction: column;\n      .date {\n        margin-bottom: 7px;\n      }\n    }\n  }\n`\n/* ===============================================\n#  Blog\n=============================================== */\nconst Blog = props => {\n  let content = props.description || props.excerpt\n  if (content.length >= 105) {\n    content = `${content.substr(0, 105)}...`\n  }\n  return (\n    <BlogWrapper\n      key={props.slug}\n      itemProp=\"blogPost\"\n      itemScope\n      itemType=\"http://schema.org/BlogPosting\"\n    >\n      <div>\n        <h2 itemProp=\"name\">\n          <Link to={props.slug} itemProp=\"url\">\n            {props.title}\n          </Link>\n        </h2>\n      </div>\n      <section>\n        <p\n          itemProp=\"headline\"\n          dangerouslySetInnerHTML={{\n            __html: content,\n          }}\n        />\n      </section>\n      <div className=\"info\">\n        <PublishDate date={props.date} />\n        <Tags tags={props.tags} />\n      </div>\n    </BlogWrapper>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}