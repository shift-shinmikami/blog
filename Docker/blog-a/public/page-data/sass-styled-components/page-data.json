{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/sass-styled-components/","webpackCompilationHash":"b25dc0c52a71e63e7919","result":{"data":{"site":{"siteMetadata":{"title":"Shin-tech25's blog","author":"Shin-tech25","siteUrl":"https://Shin-tech25.netlify.app"}},"markdownRemark":{"id":"abc8c7a5-b059-5565-9328-c3c754395213","excerpt":"Sass(SCSS)でよく使う関数を styled-components でも使いたくて、いろいろ調べてみました。 まずは自力でなんとかしてみる   など色に関わる sass 関数を使いたい場面が出てきた為、以下のような関数を定義して一箇所にまとめておき、必要な場面で呼び出す、というような事をしていました。 rgba…","html":"<p>Sass(SCSS)でよく使う関数を styled-components でも使いたくて、いろいろ調べてみました。</p>\n<h2 id=\"まずは自力でなんとかしてみる\">まずは自力でなんとかしてみる</h2>\n<p><code class=\"language-text\">rgba</code> <code class=\"language-text\">lighten</code> <code class=\"language-text\">darken</code>など色に関わる sass 関数を使いたい場面が出てきた為、以下のような関数を定義して一箇所にまとめておき、必要な場面で呼び出す、というような事をしていました。</p>\n<h3 id=\"rgba-function\">rgba function</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">rgba</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">hex<span class=\"token punctuation\">,</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> hex<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    c <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  r <span class=\"token operator\">=</span> hex<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    c <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> <span class=\"token number\">0x11</span> <span class=\"token operator\">*</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">rgba(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>alpha<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"rgba-function-呼び出し\">rgba function 呼び出し</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#999999\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"lighten-function-と-darken-function\">lighten function と darken function</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// lighten //</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">lighten</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">hex<span class=\"token punctuation\">,</span> amount <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> amt <span class=\"token operator\">=</span> amount <span class=\"token operator\">*</span> <span class=\"token number\">100</span>\n  <span class=\"token keyword\">const</span> temp <span class=\"token operator\">=</span> <span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span>hex<span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> temp\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// darken //</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">darken</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">hex<span class=\"token punctuation\">,</span> amount <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> amt <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> temp <span class=\"token operator\">=</span> <span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span>hex<span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> temp\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 共通 //</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">hex<span class=\"token punctuation\">,</span> amt</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> usePound <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hex<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    hex <span class=\"token operator\">=</span> hex<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    usePound <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>hex<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> amt\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    r <span class=\"token operator\">=</span> <span class=\"token number\">255</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    r <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x00ff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> amt\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    b <span class=\"token operator\">=</span> <span class=\"token number\">255</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    b <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">let</span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0000ff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> amt\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    g <span class=\"token operator\">=</span> <span class=\"token number\">255</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    g <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>usePound <span class=\"token operator\">?</span> <span class=\"token string\">\"#\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>g <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"lighten--darken-呼び出し\">lighten &#x26; darken 呼び出し</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> lightenColor <span class=\"token operator\">=</span> <span class=\"token function\">lighten</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#999999\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> darkenColor <span class=\"token operator\">=</span> <span class=\"token function\">darken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#999999\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"結論-そんなことしなくても-polished-を使えばよかった！\">結論: そんなことしなくても polished を使えばよかった！</h2>\n<p>とりあえずは上記の方法で解決したんですが、よく考えたらそういうライブラリありそうだなと思って調べてみたらやっぱりありました！<a href=\"https://github.com/styled-components/polished\" target=\"_blank\" rel=\"noopener\">polished</a>というライブラリで、様々な Sass の便利な機能が styled-components で使えるようになります。　<a href=\"https://polished.js.org/docs/\" target=\"_blank\" rel=\"noopener\">ドキュメントはこちらから！</a></p>\n<p>styled-components のチームでメンテナンスしてるみたいです。もっと早くに知りたかった 😭</p>\n<h3 id=\"polished-インストール\">polished インストール</h3>\n<p>yarn or npm でインストール</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add polished --dev</code></pre></div>\n<h3 id=\"polished-を使ってみる\">polished を使ってみる</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> rgba<span class=\"token punctuation\">,</span> darken<span class=\"token punctuation\">,</span> lighten <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"polished\"</span>\n\n<span class=\"token keyword\">const</span> Style <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  h1 {\n    color: rgba(\"#000\", 0.5);\n  }\n  h2 {\n    color: lighten(0.5 \"#000\");\n  }\n  h3 {\n    color: darken(0.5, \"#000\");\n  }\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>rgba ではカラーコードが第一引数にきて、darken と lighten ではカラーコードが第二引数にくるみたいですね…！ちょっとややこしい…？</p>\n<p>謎な部分もあるけど、色関連以外にもいろんな機能が網羅されててめっちゃ便利そうなので今後styled-componentsを使う時は絶対セットで入れると思います！おすすめ〜</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/sass-styled-components/#%E3%81%BE%E3%81%9A%E3%81%AF%E8%87%AA%E5%8A%9B%E3%81%A7%E3%81%AA%E3%82%93%E3%81%A8%E3%81%8B%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\">まずは自力でなんとかしてみる</a></p>\n<ul>\n<li><a href=\"/sass-styled-components/#rgba-function\">rgba function</a></li>\n<li><a href=\"/sass-styled-components/#rgba-function-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97\">rgba function 呼び出し</a></li>\n<li><a href=\"/sass-styled-components/#lighten-function-%E3%81%A8-darken-function\">lighten function と darken function</a></li>\n<li><a href=\"/sass-styled-components/#lighten--darken-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97\">lighten &#x26; darken 呼び出し</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/sass-styled-components/#%E7%B5%90%E8%AB%96-%E3%81%9D%E3%82%93%E3%81%AA%E3%81%93%E3%81%A8%E3%81%97%E3%81%AA%E3%81%8F%E3%81%A6%E3%82%82-polished-%E3%82%92%E4%BD%BF%E3%81%88%E3%81%B0%E3%82%88%E3%81%8B%E3%81%A3%E3%81%9F%EF%BC%81\">結論: そんなことしなくても polished を使えばよかった！</a></p>\n<ul>\n<li><a href=\"/sass-styled-components/#polished-%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">polished インストール</a></li>\n<li><a href=\"/sass-styled-components/#polished-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\">polished を使ってみる</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/sass-styled-components"},"frontmatter":{"title":"Sass(SCSS)の関数をstyled-componentsでも使いたい","date":"2019-08-11","description":"Sass(SCSS)でよく使う関数を styled-components でも使いたくて、いろいろ調べてみました。","tags":["React","styled-components","polished"],"slug":"sass-styled-components"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sass-styled-components","relatedPosts":[{"title":"【styled-components】keyframesにpropsを渡す方法","slug":"styled-components-keyframes","date":"2019-08-06","score":200},{"title":"Gatsby製ブログでサイト内検索を実装しました","slug":"gatsby-site-search","date":"2019-10-25","score":150},{"title":"Gatsby + Markdownでブログを作り直しました","slug":"gatsby-blog-with-markdown","date":"2019-09-12","score":150},{"title":"GatsbyJS + Contentful + Netlifyでブログ作ってみた","slug":"gatsby-contentful-netlify-blog","date":"2019-07-04","score":150}],"latestPosts":[{"title":"山口周著「知的戦闘力を高める独学の技法」を読んで","slug":"book-review-howto-learn","date":"2022-07-14"},{"title":"メンテナンスしやすいAnsiblePlaybookの書き方","slug":"ansible-playbook-maintainance","date":"2022-07-06"},{"title":"Moff animal cafe イーアス高尾に行ってきました","slug":"moff-iias-takao","date":"2022-07-03"},{"title":"Commitizenのプレフィックスを絵文字に変更してコミットメッセージを可愛くしました","slug":"commitizen-with-emojis","date":"2020-11-22"},{"title":"Gatsby製ブログでサイト内検索を実装しました","slug":"gatsby-site-search","date":"2019-10-25"}],"previous":{"fields":{"slug":"/styled-components-keyframes"},"frontmatter":{"title":"【styled-components】keyframesにpropsを渡す方法","date":"2019-08-06","tags":["React","styled-components"],"slug":"styled-components-keyframes","keywords":"JavaScript"}},"next":{"fields":{"slug":"/gatsby-blog-with-markdown"},"frontmatter":{"title":"Gatsby + Markdownでブログを作り直しました","date":"2019-09-12","tags":["React","Gatsby","Markdown"],"slug":"gatsby-blog-with-markdown","keywords":"JavaScript"}}}}}