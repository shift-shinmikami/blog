{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/Nginx-LetsEncrypt/","webpackCompilationHash":"9c161c798e5cdc6d0502","result":{"data":{"site":{"siteMetadata":{"title":"Shin-tech25's blog","author":"Shin-tech25","siteUrl":"https://Shin-tech25.netlify.app"}},"markdownRemark":{"id":"cfb460f2-6826-5ba8-a972-6354dc09b80d","excerpt":"概要 Nginx の Web サイトをフリーのサーバ証明書発行サービスである Let’s Encrypt を用いて SSL 対応する方法について解説します。VPS には Web Arena Indigo を用いています。この VPS サーバにインストールした Nginx に対して Let’s Encrpt…","html":"<h1 id=\"概要\">概要</h1>\n<p>Nginx の Web サイトをフリーのサーバ証明書発行サービスである Let’s Encrypt を用いて SSL 対応する方法について解説します。VPS には Web Arena Indigo を用いています。この VPS サーバにインストールした Nginx に対して Let’s Encrpt を用いて SSL 対応することを考えました。また、サーバ証明書を自動で更新出来るように cron 設定しました。</p>\n<h1 id=\"webarena-indigo-の紹介\">WebArena Indigo の紹介</h1>\n<p>WebArena Indigo とは、国内最安値のシンプルに使える個人向けの VPS サービスです。NTTPC コミュニケーションズが運営しており、高速・安定のネットワーク回線を利用できることが強みです。</p>\n<p>最安で 349 円（月額）から利用できるリーズナブルな価格設定が魅力的です。</p>\n<h1 id=\"お名前com-のドメインを取得する\">お名前.com のドメインを取得する</h1>\n<p>お名前.com は最安値で年間 1 円からドメインを取得することが出来ます。WebArena Indigo で建てたサーバに対して、ドメインを取得しました。</p>\n<p>DNS サーバ設定については以下の公式 Youtube が参考になりました。</p>\n<p>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 50%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <div><iframe src=\"https://www.youtube.com/embed/ZB23tAxKqmU\" style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \"></iframe></div>\n          </div>\n          </p>\n<h1 id=\"lets-encrypt-について\">Let’s Encrypt について</h1>\n<p>Let’s Encrypt はフリーで証明書を発行してくれる認証局です。米国の非営利団体である ISRG(Internet Security Research Group)により運営されています。全ての Web サイトを暗号化することを目指したプロジェクトです。証明書有効期限は 90 日と短いですが、コマンドで自動更新が可能です。</p>\n<ul>\n<li><a href=\"https://letsencrypt.org/ja/\" target=\"_blank\" rel=\"noopener\">Let’s Encrypt</a></li>\n<li><a href=\"https://free-ssl.jp/\" target=\"_blank\" rel=\"noopener\">Let’s Encrypt 総合ポータル</a></li>\n</ul>\n<p>非営利団体ですが、現在では Facebook やシスコシステムズ、Akamai Technologies、Verizon といった数多くの大手企業に支えられているため、財務基盤に問題があるわけではありません。</p>\n<p>Let’s Encrypt では、90 日間有効な DV(Domain Validation)SSL 証明書を 2 つの認証方式（ドメイン認証、DNS 認証）で提供しています。SSL 証明書は無料で提供されていますが、暗号強度などは一般的に販売されている SSL 署名書と同じです。</p>\n<p>また、大きな特徴として ACME(Automated Certificate Management Environment)プロトコルと呼ばれる SSL 証明書を自動発行する仕組みを利用している点です。他の認証局と異なり、認証してから数秒で SSL 証明書が発行され、すぐにサーバーへデプロイ出来るという非常に高度な SSL 証明書発行インフラを運用しています。</p>\n<p>管理者（root）権限のあるサーバーで Let’s Encrypt を利用する場合は、一般的に certbot などのアプリケーションが利用されています。事前にスクリプトが定期的に実行されるように設定しておけば、レンタルサーバーの無料 SSL 機能と同様の自動更新が比較的簡単に実現できます。</p>\n<h1 id=\"lets-encrypt-の使い方\">Let’s Encrypt の使い方</h1>\n<p>Let’s Encrypt はクライアントソフトウェア「Certbot」を使用することで、SSL/TLS サーバ証明書の取得・更新作業を自動化出来る仕組みになっています。一般の認証局では、証明書署名要求＝ CSR(Certificate Signing Request)が必要ですが、これらの作業を Certbot クライアントが自動的に行います。</p>\n<h2 id=\"lets-encrypt-を導入する\">Let’s Encrypt を導入する</h2>\n<p>私の環境では、CentOS Stream-8 を用いています。CentOS に準じて解説します。\nまた、Web サーバには Nginx を用いています。Apache を用いる場合は、別途<code class=\"language-text\">python-certbot-apache</code>もインストールする必要があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">sudo yum install epel-release\nsudo yum install certbot</code></pre></div>\n<p>証明書取得コマンドの実行</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">certbot certonly --webroot -w /var/www/html -d www.shin-tech25.com</code></pre></div>\n<h1 id=\"nginx-設定ファイルetcnginxnginxconfの編集\">Nginx 設定ファイル(/etc/nginx/nginx.conf)の編集</h1>\n<p>Nginx の設定ファイル(/etc/nginx/nginx.conf)を編集し、以下の server ディレクティブを追加します。server_name には、DNS で設定したドメインを記入してください。</p>\n<p>ssl.conf</p>\n<div class=\"gatsby-highlight\" data-language=\"conf\"><pre class=\"language-conf\"><code class=\"language-conf\">server {\n    listen       443 ssl;\n    server_name  www.shin-tech25.com;\n\n    ssl_certificate     /etc/letsencrypt/live/www.shin-tech25.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/www.shin-tech25.com/privkey.pem;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n}</code></pre></div>\n<p>Let’s Encrypt を使用した場合、/etc/letsencrypt/live/(ドメイン名)/fullchain.pem にサーバ証明書のシンボリックリンクが貼られます。また、/etc/letsencrypt/live/(ドメイン名)/privkey.pem に秘密鍵のシンボリックリンクが貼られます。これを Nginx の設定ファイルに記載します。</p>\n<p>実態は、/etc/letsencrypt/archive/(ドメイン名)/fullchainN.pem、/etc/letsencrypt/archive/(ドメイン名)/privkeyN.pem となります。N は更新回数を表します。更新の度にサーバ証明書・秘密鍵の実態は更新されます。シンボリックリンクは最新の実態ファイルを参照します。</p>\n<h3 id=\"cron-を使用して自動で-ssl-証明書を更新出来るようにする\">cron を使用して自動で SSL 証明書を更新出来るようにする</h3>\n<p>cron は<code class=\"language-text\">* * * * *</code>の 5 箇所を指定して、起動時間を設定します。左から「分」「時」「日」「月」「曜日」を指定します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// cronの起動時間設定\n* * * * * （起動したい処理）\n| | | | |\n| | | | |- 曜日\n| | | |--- 月\n| | |----- 日\n| |------- 時\n|--------- 分</code></pre></div>\n<p>Let’s Encrypt は、90 日間で有効期限が切れるため、2 ヶ月間隔で SSL 証明書を更新できるように設定しました。</p>\n<p>2 ヶ月間隔で処理を実行する書き方は以下です。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># 2ヶ月毎に起動する（2/1 00:00, 4/1 00:00, 6/1 00:00・・・12/1 00:00）\n0 0 1 */2 * (起動したい処理)</code></pre></div>\n<p>また、30 日間以上の猶予がある場合は、<code class=\"language-text\">--force-renewal</code>オプションを付与すれば警告を無視して強制的に更新することが可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo certbot renew --force-renewal</code></pre></div>\n<p>一応テストする際には、<code class=\"language-text\">--dry-run</code>オプションを付けてちゃんと通ることを確認しましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo certbot renew --force-renewal --dry-run</code></pre></div>\n<p>まとめると以下のような crontab の書き方になります。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0 0 1 */2 *  sudo certbot renew --force-renewal</code></pre></div>\n<p>crontab の設定には、<code class=\"language-text\">crontab -u root -e</code>で root ユーザの crontab を設定することができます。</p>\n<p>cron を書き換えたら、サービスの再起動を行っておきましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl restart crond</code></pre></div>\n<h1 id=\"参考\">参考</h1>\n<ul>\n<li><a href=\"https://oki2a24.com/2018/11/06/enable-ssl-tls-in-docker-nginx/\" target=\"_blank\" rel=\"noopener\">Docker の nginx:latest(1.15.5)で SSL/TLS を使えるようにする最低限の Dockerfile を作りました</a></li>\n<li><a href=\"https://qiita.com/__juiblex__/items/fe599755dc321b7489b8\" target=\"_blank\" rel=\"noopener\">nginx リバースプロキシ環境で Let’s Encrypt による SSL/TLS 化</a></li>\n<li><a href=\"https://ssl.sakura.ad.jp/column/letsencrypt/\" target=\"_blank\" rel=\"noopener\">無料 SSL 証明書の Let’s Encrypt とは？</a></li>\n<li><a href=\"https://free-ssl.jp/usage/\" target=\"_blank\" rel=\"noopener\">Let’s Encrypt の使い方</a></li>\n<li><a href=\"https://it-jog.com/khow/serv/renewletsencrypt\" target=\"_blank\" rel=\"noopener\">Let’s Encrypt の SSL 証明書を更新する(手動と cron による自動更新)</a></li>\n<li><a href=\"https://www.yoheim.net/blog.php?q=20190902\" target=\"_blank\" rel=\"noopener\">cron の日時指定を、基礎から学ぶ（分,時,日,月,曜日の指定、○ 分ごと、月末起動、など）</a></li>\n<li><a href=\"https://www.server-memo.net/tips/crontab.html\" target=\"_blank\" rel=\"noopener\">crontab の書き方</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/Nginx-LetsEncrypt/#%E6%A6%82%E8%A6%81\">概要</a></li>\n<li><a href=\"/Nginx-LetsEncrypt/#webarena-indigo-%E3%81%AE%E7%B4%B9%E4%BB%8B\">WebArena Indigo の紹介</a></li>\n<li><a href=\"/Nginx-LetsEncrypt/#%E3%81%8A%E5%90%8D%E5%89%8Dcom-%E3%81%AE%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B\">お名前.com のドメインを取得する</a></li>\n<li><a href=\"/Nginx-LetsEncrypt/#lets-encrypt-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">Let’s Encrypt について</a></li>\n<li>\n<p><a href=\"/Nginx-LetsEncrypt/#lets-encrypt-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Let’s Encrypt の使い方</a></p>\n<ul>\n<li><a href=\"/Nginx-LetsEncrypt/#lets-encrypt-%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B\">Let’s Encrypt を導入する</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Nginx-LetsEncrypt/#nginx-%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%ABetcnginxnginxconf%E3%81%AE%E7%B7%A8%E9%9B%86\">Nginx 設定ファイル(/etc/nginx/nginx.conf)の編集</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Nginx-LetsEncrypt/#cron-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E8%87%AA%E5%8B%95%E3%81%A7-ssl-%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%82%92%E6%9B%B4%E6%96%B0%E5%87%BA%E6%9D%A5%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\">cron を使用して自動で SSL 証明書を更新出来るようにする</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Nginx-LetsEncrypt/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","fields":{"slug":"/Nginx-LetsEncrypt"},"frontmatter":{"title":"NginxのWebサイトをLet's EncryptでSSL対応する方法","date":"2022-07-19","description":"NginxのWebサイトをフリーのサーバ証明書発行サービスであるLet's Encryptを用いてSSL対応する方法について。ドメイン取得にお名前.comを使う方法についても解説します。","tags":["Nginx","SSL/TLS","ドメイン","ブログ"],"slug":"Nginx-LetsEncrypt"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Nginx-LetsEncrypt","relatedPosts":[{"title":"gatsby buildからgit push するまでのバッチファイル作成","slug":"blog-tools","date":"2022-07-21","score":50},{"title":"なぜWordPressではなくMarkdownなのか？","slug":"why-blog-by-markdown","date":"2022-07-19","score":50}],"latestPosts":[{"title":"Google検索のオプションなど","slug":"google-search","date":"2022-07-24"},{"title":"ハッキングにおける偵察技術","slug":"hacking-reconnaissance","date":"2022-07-24"},{"title":"ハッキングにおける情報収集の手法","slug":"hacking-gathering-information","date":"2022-07-24"},{"title":"ハッキングの手順と攻撃種類","slug":"hacking-phase-and-strategy","date":"2022-07-24"},{"title":"情報セキュリティの基礎","slug":"information-security-basic","date":"2022-07-24"}],"previous":{"fields":{"slug":"/why-blog-by-markdown"},"frontmatter":{"title":"なぜWordPressではなくMarkdownなのか？","date":"2022-07-19","tags":["ブログ","Markdown","静的サイト","WordPress"],"slug":"why-blog-by-markdown","keywords":"Markdown, ブログ, 静的サイト"}},"next":{"fields":{"slug":"/blog-tools"},"frontmatter":{"title":"gatsby buildからgit push するまでのバッチファイル作成","date":"2022-07-21","tags":["ブログ","git","bat","CI/CD"],"slug":"blog-tools","keywords":"ブログ, git, bat, CI/CD"}}}}}