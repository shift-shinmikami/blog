{"version":3,"sources":["webpack:///./src/templates/tag-page/style.js","webpack:///./src/templates/tag-page/index.js","webpack:///./src/components/blog/index.js"],"names":["Wrapper","styled","div","rgba","colors","text","TagPageTemplate","data","location","tagName","pageContext","slug","posts","allMarkdownRemark","edges","title","description","noindex","className","length","map","node","frontmatter","fields","key","date","excerpt","tags","pageQuery","BlogWrapper","article","gray","Blog","props","content","substr","itemProp","itemScope","itemType","to","dangerouslySetInnerHTML","__html"],"mappings":"+KA4BeA,EAxBCC,IAAOC,IAAV,qEAAGD,CAAH,yPAeIE,YAAKC,IAAOC,KAAM,KCnBnC,0CA+CeC,UAvCS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SACzBC,EADqD,EAAlBC,YACbC,KACtBC,EAAQL,EAAKM,kBAAkBC,MACrC,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUO,MAAM,SAChC,kBAAC,IAAD,CACEA,MAAK,OAASN,EACdO,YAAgBP,EAAL,kBACXQ,SAAO,IAET,kBAAC,EAAD,CAASC,UAAU,SACjB,yBAAKA,UAAU,OACb,4BACE,kBAAC,IAAD,MACA,8BAAOT,IAET,2BACE,2BAAIG,EAAMO,QADZ,cAIDP,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOZ,KACpD,OACE,kBAAC,IAAD,CACEI,MAAOA,EACPS,IAAKH,EAAKE,OAAOZ,KACjBA,KAAI,IAAMU,EAAKC,YAAYX,KAAvB,IACJc,KAAMJ,EAAKC,YAAYG,KACvBT,YAAaK,EAAKC,YAAYN,YAC9BU,QAASL,EAAKK,QACdC,KAAMN,EAAKC,YAAYK,aA9BrC,IAyCaC,EAAS,c,iCCjDtB,4DAUMC,EAAc5B,IAAO6B,QAAV,uEAAG7B,CAAH,8dAGYE,YAAKC,IAAO2B,KAAM,KA4EhCC,IAnCF,SAAAC,GACX,IAAIC,EAAUD,EAAMjB,aAAeiB,EAAMP,QAIzC,OAHIQ,EAAQf,QAAU,MACpBe,EAAaA,EAAQC,OAAO,EAAG,KAAxB,OAGP,kBAACN,EAAD,CACEL,IAAKS,EAAMtB,KACXyB,SAAS,WACTC,WAAS,EACTC,SAAS,iCAET,6BACE,wBAAIF,SAAS,QACX,kBAAC,IAAD,CAAMG,GAAIN,EAAMtB,KAAMyB,SAAS,OAC5BH,EAAMlB,SAIb,iCACE,uBACEqB,SAAS,WACTI,wBAAyB,CACvBC,OAAQP,MAId,yBAAKhB,UAAU,QACb,kBAAC,IAAD,CAAaO,KAAMQ,EAAMR,OACzB,kBAAC,IAAD,CAAME,KAAMM,EAAMN","file":"component---src-templates-tag-page-index-js-bf057ecafe6f86da274e.js","sourcesContent":["import styled from \"styled-components\"\nimport { rgba } from \"polished\"\nimport { colors } from \"../../style/GlobalStyle\"\n\nconst Wrapper = styled.div`\n  .top {\n    padding-top: 30px;\n    padding-bottom: 110px;\n    text-align: center;\n    h1 {\n      font-size: 1.8rem;\n      font-weight: 600;\n      padding-bottom: 15px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      svg {\n        margin-right: 5px;\n        margin-bottom: 3px;\n        color: ${rgba(colors.text, 0.4)};\n      }\n    }\n    p {\n      font-size: 0.9rem;\n    }\n  }\n`\n\nexport default Wrapper\n","import React from \"react\"\nimport { FaHashtag } from \"react-icons/fa\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport Blog from \"../../components/blog\"\nimport Wrapper from \"./style\"\n\nconst TagPageTemplate = ({ data, location, pageContext }) => {\n  const tagName = pageContext.slug\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <Layout location={location} title=\"title\">\n      <SEO\n        title={`タグ: ${tagName}`}\n        description={`${tagName}タグを含む記事の一覧ページです`}\n        noindex\n      />\n      <Wrapper className=\"inner\">\n        <div className=\"top\">\n          <h1>\n            <FaHashtag />\n            <span>{tagName}</span>\n          </h1>\n          <p>\n            <b>{posts.length}</b>件の投稿があります\n          </p>\n        </div>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <Blog\n              title={title}\n              key={node.fields.slug}\n              slug={`/${node.frontmatter.slug}/`}\n              date={node.frontmatter.date}\n              description={node.frontmatter.description}\n              excerpt={node.excerpt}\n              tags={node.frontmatter.tags}\n            />\n          )\n        })}\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$slug] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            tags\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport { rgba } from \"polished\"\nimport { Tags, PublishDate } from \"../../components/modules\"\nimport { colors } from \"../../style/GlobalStyle\"\n\n/* ===============================================\n#  style\n=============================================== */\nconst BlogWrapper = styled.article`\n  margin-bottom: 35px;\n  padding-bottom: 35px;\n  border-bottom: 1px solid ${rgba(colors.gray, 0.3)};\n  &:last-child {\n    border-bottom: none;\n  }\n  a {\n    text-decoration: none;\n  }\n  h2 {\n    font-size: 1.2rem;\n    font-weight: 600;\n    padding-bottom: 5px;\n    a {\n      transition: 0.3s ease;\n      &:hover {\n        color: var(--primary);\n      }\n    }\n  }\n  .info {\n    display: flex;\n    justify-content: space-between;\n  }\n  p {\n    line-height: 1.8;\n    padding: 15px 0 25px 0;\n    font-size: 0.95rem;\n  }\n  @media screen and (max-width: 780px) {\n    margin-bottom: 25px;\n    padding-bottom: 25px;\n    .info {\n      flex-direction: column;\n      .date {\n        margin-bottom: 7px;\n      }\n    }\n  }\n`\n/* ===============================================\n#  Blog\n=============================================== */\nconst Blog = props => {\n  let content = props.description || props.excerpt\n  if (content.length >= 105) {\n    content = `${content.substr(0, 105)}...`\n  }\n  return (\n    <BlogWrapper\n      key={props.slug}\n      itemProp=\"blogPost\"\n      itemScope\n      itemType=\"http://schema.org/BlogPosting\"\n    >\n      <div>\n        <h2 itemProp=\"name\">\n          <Link to={props.slug} itemProp=\"url\">\n            {props.title}\n          </Link>\n        </h2>\n      </div>\n      <section>\n        <p\n          itemProp=\"headline\"\n          dangerouslySetInnerHTML={{\n            __html: content,\n          }}\n        />\n      </section>\n      <div className=\"info\">\n        <PublishDate date={props.date} />\n        <Tags tags={props.tags} />\n      </div>\n    </BlogWrapper>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}